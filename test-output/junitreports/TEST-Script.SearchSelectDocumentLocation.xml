<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="CIPLWKT014" failures="0" tests="25" name="Script.SearchSelectDocumentLocation" time="831.284" errors="1" timestamp="2024-10-22T15:53:52 IST" skipped="0">
  <testcase classname="Script.SearchSelectDocumentLocation" name="Login" time="31.299">
    <system-out>
      <![CDATA[Scenario 01: Log into EWA
Enter valid user name into username field
Enter valid password into password field
Select a Room
Click Login button
Session for user is already active.Do you want to create new session? dialog box displayed User click on OK button,
User logged in successfully... ]]>
    </system-out>
  </testcase> <!-- Login -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="A_BlankSearch" time="22.233">
    <system-out>
      <![CDATA[Scenario 01: Search tab - blank search
Scenario 01: Search tab - blank search
User click on Search tab
Click on find button
It should list all the document successfully...
Click on clear button
Searched document list cleared successfull]]>
    </system-out>
  </testcase> <!-- A_BlankSearch -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="B_ExactSearchInIndexWithLoadMoreCount" time="74.272">
    <system-out>
      <![CDATA[Scenario 02: Search - load more count
User click on Search tab
Click on find button
Document not listed
NoAlertIsPresent
It should show 'no more data found' warning alert, Warning alert displayed successfull
Click on OK button
It should close the Alert dialog successfull
Click on clear button]]>
    </system-out>
  </testcase> <!-- B_ExactSearchInIndexWithLoadMoreCount -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="C_ExactSearchInIndex" time="32.281">
    <system-out>
      <![CDATA[Scenario 03: Search tab - Index search contains 'Exact Phrase'
User click on search tab
Enter value on index search contains textbox
Click on find button
It should list the document on the page, document displayed successfull...
Search tab: Exact phrase index contains search working fine
Click on Clear button
It should clear the searched document list successfully]]>
    </system-out>
  </testcase> <!-- C_ExactSearchInIndex -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="D_AtLeastOneWordSeachIndex" time="14.492">
    <system-out>
      <![CDATA[Scenario 04: Search tab- Index contains 'AtleastOneOfTheWord'
User click on Search tab
User click on atleastoneofthe word submenu
User enter the value into  index contains text box
User click on find button
It should display document on the page
Searchfunctionality with exact phrase index contains search working fine]]>
    </system-out>
  </testcase> <!-- D_AtLeastOneWordSeachIndex -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="E_AllOfTheWordSearchIndex" time="50.512">
    <system-out>
      <![CDATA[Scenario 05:Search tab Index contains 'AtleastOneOfTheWord'
Click on Index contains search 'all of th word' submenu
Enter value in index contains search textbox
Click on find button
It should display the document on the page, Document dislpayed successsfull...
Index contains search 'all of the word' working fine...
It should display the document on the page, Document dislpayed successsfull...
Index contains search 'all of the word' working fine...
Click on clear button]]>
    </system-out>
  </testcase> <!-- E_AllOfTheWordSearchIndex -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="G_FolderLevelSearch" time="31.621">
    <system-out>
      <![CDATA[Scenario 10: Verify 'Select document location' - folder
Click on search tab
Click on 'Select search location' textbox
Expand a cabinet
Expand a drawer
Select a folder
Click on 'Select search location' dialog OK button
Click on find button
It should display the particular selected folder documents on the page]]>
    </system-out>
  </testcase> <!-- G_FolderLevelSearch -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="H_DrawerLevelSearch" time="23.973">
    <system-out>
      <![CDATA[Scneario 11: Verify 'Select Document location' - drawer
Click on search tab
Click on 'Select Document location' textbox
Expand a cabinet
Select a drawer
Click on 'Select Document location' dialog OK button
Click on find button
It should display the particular drawer document on the page]]>
    </system-out>
  </testcase> <!-- H_DrawerLevelSearch -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="I_CabinetLevel" time="24.894">
    <system-out>
      <![CDATA[Scenario 12: Verify 'Select Document location'- cabinet 
Click on search tab
Click on 'Select Document location' textbox
Expand a cabinet
Click on 'Select Document location' dialog OK button
Click on find button
It should display the searched cabinet document on the page]]>
    </system-out>
  </testcase> <!-- I_CabinetLevel -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="J_DocumentDropDown" time="28.270">
    <system-out>
      <![CDATA[Scenario 13: Verify search tab ('Document Type')
Click on document type dropdown
User should select a document type
Click on find button
It should display the searched document type documents on the page]]>
    </system-out>
  </testcase> <!-- J_DocumentDropDown -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="K_DocumentCreatorDropDown" time="19.535">
    <system-out>
      <![CDATA[Scenario 14:Verify Search tab  ('document creator')
Scenario 14:Verify Search tab  ('document creator')
Click on search tab
Select a document creator from the dropdown
Click on find button
It should display the searched creator documents on the page]]>
    </system-out>
  </testcase> <!-- K_DocumentCreatorDropDown -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="L_Reject_WF" time="16.071">
    <system-out>
      <![CDATA[Scenario 14:Verify Search tab-Workflow status(Reject option)
Click on workflow status dropdown
Select Reject option
Click on find button
It should display the rejected workflow documents on the page
Click on clear button
Listed document cleared successfully...
=================================================================]]>
    </system-out>
  </testcase> <!-- L_Reject_WF -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="M_PendingWorkflow" time="8.794">
    <system-out>
      <![CDATA[Scenario 15:  Verify Search tab-Workflow status(Pending option)
Select the workflow dropdown pending Option
Click on find button
It should display the wrokflow status pending documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================]]>
    </system-out>
  </testcase> <!-- M_PendingWorkflow -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="N_CompletedWF_Document" time="35.777">
    <system-out>
      <![CDATA[Scenario 16: Verify Search tab-Workflow status(Workflow completed option)
Select a workflow dropdown 'workflow completed' option
USer click on find button
It should display the wrokflow completed documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================
Scenario 17: Verify Search tab-Workflow status(Endworkflow option)
Select a workflow dropdown  'endworkflow' option
Click on find button
It should display the workflow ended documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================]]>
    </system-out>
  </testcase> <!-- N_CompletedWF_Document -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="O_TaskCompletedWFDocumentt" time="14.822">
    <system-out>
      <![CDATA[Scenario 18: Verify Search tab-Workflow status(TaskCompleted option)
Select a workflow dropdown  Task completed Option
Click on find button
It should display the Task completed documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================]]>
    </system-out>
  </testcase> <!-- O_TaskCompletedWFDocumentt -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="N_TextSearchWithSQLData" time="42.533">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;//*[@id=&#039;searchListTable&#039;]/tbody/tr[3]/td[3]&quot;}
  (Session info: chrome=129.0.6668.101)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:25:53&#039;
System info: host: &#039;CIPLWKT014&#039;, ip: &#039;10.4.8.14&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;22.0.2&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.101, chrome: {chromedriverVersion: 129.0.6668.100 (cf58cba358d..., userDataDir: C:\Users\nisha.r\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65410}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 96e36213075c379e5f8583d2e3db79bb
*** Element info: {Using=xpath, value=//*[@id=&#039;searchListTable&#039;]/tbody/tr[3]/td[3]}" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='searchListTable']/tbody/tr[3]/td[3]"}
  (Session info: chrome=129.0.6668.101)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'CIPLWKT014', ip: '10.4.8.14', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '22.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.101, chrome: {chromedriverVersion: 129.0.6668.100 (cf58cba358d..., userDataDir: C:\Users\nisha.r\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65410}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 96e36213075c379e5f8583d2e3db79bb
*** Element info: {Using=xpath, value=//*[@id='searchListTable']/tbody/tr[3]/td[3]}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy24.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:212)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:556)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:546)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:702)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at Generic.BaseClass.jsclick(BaseClass.java:1193)
at Pom.SearchFunction.TextSearchWithSQLData(SearchFunction.java:682)
at Script.SearchSelectDocumentLocation.N_TextSearchWithSQLData(SearchSelectDocumentLocation.java:184)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
    <system-out>
      <![CDATA[Scenario 19:Search tab- TextContains search 'alloftheword' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Select text contains 'alloftheword' option
Start the  indexer by using sql statement
Click on find button
It will automatically  list all the indexed document relate to the search
Click on find button
AlertNotPresent]]>
    </system-out>
  </testcase> <!-- N_TextSearchWithSQLData -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="O_TextSearchWithAllOftheWords" time="46.402">
    <system-out>
      <![CDATA[Scenario 20:Search tab- TextContains search 'AtLeasetOneOFTheWord' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Select text contains 'AtLeastOneOFTheWord' option
Start the  indexer by using sql statement
It will automatically  list all the indexed document relate to the search
open the document from the list, verify the thumbnail it will be highlihted for the particular search.
AlertNotPresent]]>
    </system-out>
  </testcase> <!-- O_TextSearchWithAllOftheWords -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="P_TextSearchWithAtpartOftheWord" time="43.452">
    <system-out>
      <![CDATA[Scenario 21:Search tab- TextContains search 'AtPartOFTheWord' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Click on 'AtpartOFtheWord' word submenu
It will automatically  list all the indexed document relate to the search
User click on Find button
open the document from the list, verify the thumbnail it will be highlihted for the particular search.]]>
    </system-out>
  </testcase> <!-- P_TextSearchWithAtpartOftheWord -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="AppendToHit" time="27.688">
    <system-out>
      <![CDATA[Scenario 06:Search tab - AppendToHitlist checkbox
Enter the value into index contains search text box
Click on find button
It should list the document on document page
Clear the index contains search text box
Click on append to hit list check box
Enter the value into index contains search text box 
User click on find button
Its append the search document in the listed document
===========================================================================]]>
    </system-out>
  </testcase> <!-- AppendToHit -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="Find_In_Hit_List" time="51.973">
    <system-out>
      <![CDATA[scenario 07: Verify search tab - FindInHitlist checkbox
Enter the value in index contains search textbox
Click on find in hitlist check box
Click on find button
It should  display only the  searched document on the document page
===========================================================================
Scneario 08: Search tab - Include comment checkbox
Enter the value in text contains search text box
Click on Inclue_comment check box
Click on find button
It should display the document which is containing the comment..
Click  on clear button
It should clear the searched list successfully
===========================================================================]]>
    </system-out>
  </testcase> <!-- Find_In_Hit_List -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="All_Version" time="65.784">
    <system-out>
      <![CDATA[Scneario 09: Search tab - all version check box
User enter the value in index contains search text box
Click on all version check box
Click on find button
It should display the document which in containing version
Click on Clear button]]>
    </system-out>
  </testcase> <!-- All_Version -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="Q_FolderSerchIcon" time="23.050">
    <system-out>
      <![CDATA[Scenario 22: Navigation folder icon search
Click on navigation folder search icon
Enter value into navigation folder search textbox
Click on Keyboard ENTER key
Folder search dialog should be opened
Searched folder documents display on the dialog box successfully
Click on folder document close icon]]>
    </system-out>
  </testcase> <!-- Q_FolderSerchIcon -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="R_QuickSearch" time="24.129">
    <system-out>
      <![CDATA[Scenario 23: Search tab - Quick search
Enter value in quick search textbox
Click on Keyboard ENTER key
It should display searched document on the page successfully...]]>
    </system-out>
  </testcase> <!-- R_QuickSearch -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="S_DocumentSearch" time="60.440">
    <system-out>
      <![CDATA[Scenario 24:Folder document search
Open a folder
Enter document name in folder search text box
It should display the particular document on the page
The documents Search from folder completed, working fine]]>
    </system-out>
  </testcase> <!-- S_DocumentSearch -->
  <testcase classname="Script.SearchSelectDocumentLocation" name="CreateAndModifyDate" time="16.987">
    <system-out>
      <![CDATA[Scenario 25:Verify Date enter functionality
Click on search tab
Click on Datefrom
Enter the datefrom
Click on ok button
Click on Dateto
Enter the Dateto
Click on ok button
Click on find]]>
    </system-out>
  </testcase> <!-- CreateAndModifyDate -->
  <system-out>
    <![CDATA[Chrome driver launched successfull
Chrome Browser launched Successfully...
EWA URL launched successfull
Contentverse URL launched successfully...
Scenario 01: Log into EWA
Enter valid user name into username field
Enter valid password into password field
Select a Room
Click Login button
Session for user is already active.Do you want to create new session? dialog box displayed User click on OK button,
User logged in successfully... 
Scenario 01: Search tab - blank search
Scenario 01: Search tab - blank search
User click on Search tab
Click on find button
It should list all the document successfully...
Click on clear button
Searched document list cleared successfull
Scenario 02: Search - load more count
User click on Search tab
Click on find button
Document not listed
NoAlertIsPresent
It should show 'no more data found' warning alert, Warning alert displayed successfull
Click on OK button
It should close the Alert dialog successfull
Click on clear button
Scenario 03: Search tab - Index search contains 'Exact Phrase'
User click on search tab
Enter value on index search contains textbox
Click on find button
It should list the document on the page, document displayed successfull...
Search tab: Exact phrase index contains search working fine
Click on Clear button
It should clear the searched document list successfully
Scenario 04: Search tab- Index contains 'AtleastOneOfTheWord'
User click on Search tab
User click on atleastoneofthe word submenu
User enter the value into  index contains text box
User click on find button
It should display document on the page
Searchfunctionality with exact phrase index contains search working fine
Scenario 05:Search tab Index contains 'AtleastOneOfTheWord'
Click on Index contains search 'all of th word' submenu
Enter value in index contains search textbox
Click on find button
It should display the document on the page, Document dislpayed successsfull...
Index contains search 'all of the word' working fine...
It should display the document on the page, Document dislpayed successsfull...
Index contains search 'all of the word' working fine...
Click on clear button
Scenario 10: Verify 'Select document location' - folder
Click on search tab
Click on 'Select search location' textbox
Expand a cabinet
Expand a drawer
Select a folder
Click on 'Select search location' dialog OK button
Click on find button
It should display the particular selected folder documents on the page
Scneario 11: Verify 'Select Document location' - drawer
Click on search tab
Click on 'Select Document location' textbox
Expand a cabinet
Select a drawer
Click on 'Select Document location' dialog OK button
Click on find button
It should display the particular drawer document on the page
Scenario 12: Verify 'Select Document location'- cabinet 
Click on search tab
Click on 'Select Document location' textbox
Expand a cabinet
Click on 'Select Document location' dialog OK button
Click on find button
It should display the searched cabinet document on the page
Scenario 13: Verify search tab ('Document Type')
Click on document type dropdown
User should select a document type
Click on find button
It should display the searched document type documents on the page
Scenario 14:Verify Search tab  ('document creator')
Scenario 14:Verify Search tab  ('document creator')
Click on search tab
Select a document creator from the dropdown
Click on find button
It should display the searched creator documents on the page
Scenario 14:Verify Search tab-Workflow status(Reject option)
Click on workflow status dropdown
Select Reject option
Click on find button
It should display the rejected workflow documents on the page
Click on clear button
Listed document cleared successfully...
=================================================================
Scenario 15:  Verify Search tab-Workflow status(Pending option)
Select the workflow dropdown pending Option
Click on find button
It should display the wrokflow status pending documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================
Scenario 16: Verify Search tab-Workflow status(Workflow completed option)
Select a workflow dropdown 'workflow completed' option
USer click on find button
It should display the wrokflow completed documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================
Scenario 17: Verify Search tab-Workflow status(Endworkflow option)
Select a workflow dropdown  'endworkflow' option
Click on find button
It should display the workflow ended documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================
Scenario 18: Verify Search tab-Workflow status(TaskCompleted option)
Select a workflow dropdown  Task completed Option
Click on find button
It should display the Task completed documents on the page
Click on clear button
Listed document cleared successfully...
===============================================================================
Scenario 19:Search tab- TextContains search 'alloftheword' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Select text contains 'alloftheword' option
Start the  indexer by using sql statement
Click on find button
It will automatically  list all the indexed document relate to the search
Click on find button
AlertNotPresent
Scenario 20:Search tab- TextContains search 'AtLeasetOneOFTheWord' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Select text contains 'AtLeastOneOFTheWord' option
Start the  indexer by using sql statement
It will automatically  list all the indexed document relate to the search
open the document from the list, verify the thumbnail it will be highlihted for the particular search.
AlertNotPresent
Scenario 21:Search tab- TextContains search 'AtPartOFTheWord' option
NOTE:Start the indexer server then execute the mentioned SQL statement 'ALTER FULLTEXT INDEX ON Indexer START FULL POPULATION
Select * from Indexer
Click on search tab
Click on 'AtpartOFtheWord' word submenu
It will automatically  list all the indexed document relate to the search
User click on Find button
open the document from the list, verify the thumbnail it will be highlihted for the particular search.
Scenario 06:Search tab - AppendToHitlist checkbox
Enter the value into index contains search text box
Click on find button
It should list the document on document page
Clear the index contains search text box
Click on append to hit list check box
Enter the value into index contains search text box 
User click on find button
Its append the search document in the listed document
===========================================================================
scenario 07: Verify search tab - FindInHitlist checkbox
Enter the value in index contains search textbox
Click on find in hitlist check box
Click on find button
It should  display only the  searched document on the document page
===========================================================================
Scneario 08: Search tab - Include comment checkbox
Enter the value in text contains search text box
Click on Inclue_comment check box
Click on find button
It should display the document which is containing the comment..
Click  on clear button
It should clear the searched list successfully
===========================================================================
Scneario 09: Search tab - all version check box
User enter the value in index contains search text box
Click on all version check box
Click on find button
It should display the document which in containing version
Click on Clear button
Scenario 22: Navigation folder icon search
Click on navigation folder search icon
Enter value into navigation folder search textbox
Click on Keyboard ENTER key
Folder search dialog should be opened
Searched folder documents display on the dialog box successfully
Click on folder document close icon
Scenario 23: Search tab - Quick search
Enter value in quick search textbox
Click on Keyboard ENTER key
It should display searched document on the page successfully...
Scenario 24:Folder document search
Open a folder
Enter document name in folder search text box
It should display the particular document on the page
The documents Search from folder completed, working fine
Scenario 25:Verify Date enter functionality
Click on search tab
Click on Datefrom
Enter the datefrom
Click on ok button
Click on Dateto
Enter the Dateto
Click on ok button
Click on find]]>
  </system-out>
</testsuite> <!-- Script.SearchSelectDocumentLocation -->
